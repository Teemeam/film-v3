---
import { createFlickr, FetchTransport } from 'flickr-sdk';
import { getOriginalWidth, getOriginalHeight } from '../lib/getOriginalDimensions';

const oauthConfig = {
  consumerKey: import.meta.env.SECRET_FLICKR_CONSUMER_KEY,
  consumerSecret: import.meta.env.SECRET_FLICKR_CONSUMER_SECRET,
  oauthToken: import.meta.env.SECRET_OAUTH_TOKEN,
  oauthTokenSecret: import.meta.env.SECRET_OAUTH_TOKEN_SECRET,
};

const transport = new FetchTransport();

const flickr = createFlickr(oauthConfig, transport);

const response = await flickr.flickr('flickr.photosets.getPhotos', {
  photoset_id: '72157718780020052',
  user_id: '134442412@N06',
  privacy_filter: '5',
});

const photos: Photo[] = await response.photoset.photo;

const completeData: CompleteData[] = [];

await Promise.all(
  photos.map(async (photo: Photo) => {
    /**
     * Fetch info
     */
    const infoResponse = await flickr.flickr('flickr.photos.getInfo', {
      photo_id: photo.id,
    });
    const infoData: InfoData = await infoResponse;

    /**
     * Fetch sizes
     */
    const sizeResponse = await flickr.flickr('flickr.photos.getSizes', {
      photo_id: photo.id,
    });
    const sizeData: SizeData = await sizeResponse;

    const sizes: Size[] = sizeData.sizes.size;

    /**
     * Complete data
     */
    const width = getOriginalWidth(sizes);
    const height = getOriginalHeight(sizes);

    const data: CompleteData = {
      ...infoData,
      aspectRatio: typeof width === 'number' && typeof height === 'number' ? width / height : 1,
    };

    completeData.push(data);
  })
);
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <title>Astro</title>
  </head>
  <body>
    <h1>Astro</h1>

    <p>{JSON.stringify(completeData)}</p>

    {completeData.map((dataItem) => {
      return (<p>{`https://live.staticflickr.com/${dataItem.photo.server}/${dataItem.photo.id}_${dataItem.photo.originalsecret}_h.jpg`}</p>);
    })}
  </body>
</html>
